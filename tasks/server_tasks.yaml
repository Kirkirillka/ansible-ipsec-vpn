- name: Check if epel repository is installed
  yum:
    name: epel-release
    state: latest
- name: Install necessary packages (for IKE strongswan is used)
  yum:
    name: [strongswan, haveged]
    state: latest
- name: Disable SELinux in configuration file
  replace:
    path: /etc/selinux/config
    regexp: SELINUX=\w*
    replace: SELINUX=disabled
- name: Disable SELinux temporarily
  shell: setenforce 0
  ignore_errors: yes
- name: Allow traffic via firewalld
  firewalld:
    service: ipsec
    permanent: yes
    zone: public
    state: enabled
- name: Enable IP Forwarding
  lineinfile:
    line: "{{item}}"
    path: /etc/sysctl.conf
    state: present
  with_items:
    - net.ipv4.ip_forward = 1
    - net.ipv6.conf.all.forwarding=1
- name: Apply sysctl parameters
  command: /usr/sbin/sysctl -p
- name: Start services
  service:
    name: "{{ item }}"
    state: started
    enabled: yes
  with_items:
    - haveged
    - strongswan
- name: Generate private key for VPN IPSec server
  shell: /sbin/strongswan pki --gen --type rsa --size 2048 --outform pem > {{IPSEC_PRIV_KEY_PATH}}/{{IPSEC_KEY_NAME}}
- name: Generate Certificate for VPN IPSec server to authenticate this side
  shell: /sbin/strongswan pki --pub --in {{IPSEC_PRIV_KEY_PATH}}/{{IPSEC_KEY_NAME}} --type rsa | /sbin/strongswan pki --issue --lifetime 730 --cacert {{IPSEC_CERT_PATH}}/{{CA_CERT_NAME}} --cakey {{IPSEC_PRIV_KEY_PATH}}/{{CA_KEY_NAME}} --dn "{{IPSEC_DN}}" --san {{IPSEC_FQDN}} --san @{{IPSEC_IP}} --san dns:{{IPSEC_IP}} --flag serverAuth  --flag clientAuth --flag ikeIntermediate --outform pem > {{IPSEC_CERT_PATH}}/{{IPSEC_CERT_NAME}}
- name: Apply strongswan configuration (swanctl used)
  template:
    src: ../templates/vpn.conf.j2
    dest: "{{ IPSEC_CONF_PATH }}/vpn.conf"
- name: Run swanctl to apply configuration
  service:
    name: strongswan-swanctl
    state: restarted
    enabled: yes
