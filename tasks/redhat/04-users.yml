- name: Check if a "{{user}}" keypair  is issued
  stat: 
    path: "{{IPSEC_PRIV_KEY_PATH}}/{{user}}_key.pem"
  register: user_file_result

- name:  Generate Private RSA key for "{{user}}"
  shell: /sbin/strongswan pki --gen --type rsa --size 4096 --outform pem > {{IPSEC_PRIV_KEY_PATH}}/{{user}}_key.pem
  when: user_file_result.stat.exists != true or (FORCE is defined  and FORCE)

- name: Generate Self-Signed Certificate for "{{user}}"
  shell: /sbin/strongswan pki --pub --in {{IPSEC_PRIV_KEY_PATH}}/{{user}}_key.pem --type rsa | /sbin/strongswan pki --issue --lifetime 730 --cacert {{IPSEC_CERT_PATH}}/{{CA_CERT_NAME}} --cakey {{IPSEC_PRIV_KEY_PATH}}/{{CA_KEY_NAME}} --dn 'C=RU, O=IT Park Clients, CN={{user}}' --san {{user}}.{{CA_FQDN}} --flag clientAuth --outform pem > {{IPSEC_CERT_PATH}}/{{user}}_cert.pem
  when: user_file_result.stat.exists != true or (FORCE is defined  and FORCE)   

- name: Bundle's private key, certificate and CA certificate for "{{user}}"
  shell: openssl pkcs12 -export  -inkey {{IPSEC_PRIV_KEY_PATH}}/{{user}}_key.pem -in {{IPSEC_CERT_PATH}}/{{user}}_cert.pem  -certfile {{IPSEC_CERT_PATH}}/{{CA_CERT_NAME}} -out {{IPSEC_PKCS12_PATH}}/{{user}}_bundle.p12 -passout pass:{{user}}
  when: user_file_result.stat.exists != true or (FORCE is defined  and FORCE)